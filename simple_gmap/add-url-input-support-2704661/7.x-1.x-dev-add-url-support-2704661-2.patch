diff --git a/simple-gmap-output.tpl.php b/simple-gmap-output.tpl.php
index af7c1b8..c9c86e8 100644
--- a/simple-gmap-output.tpl.php
+++ b/simple-gmap-output.tpl.php
@@ -1,52 +1,33 @@
 <?php
+
 /**
  * @file
  * Displays the Simple Google Maps formatter.
  *
  * Available variables:
- * - $include_map: TRUE if an embedded dynamic map should be displayed.
- * - $include_static_map: TRUE if an embedded static map should be displayed.
- * - $width: Width of embedded map.
- * - $height: Height of embedded map.
- * - $include_link: TRUE if a link to a map should be displayed.
- * - $link_text: Text of link to display.
- * - $url_suffix: Suffix of URLs to send to Google Maps for embedded and linked
- *   maps. Contains the URL-encoded address.
- * - $zoom: Zoom level for embedded and linked maps.
- * - $information_bubble: TRUE if an information bubble should be displayed on
- *   maps. Note that in the Google Maps URLs, you need to send iwloc=A to use
- *   a bubble, and iwloc=near to omit the bubble.
+ * - $map: HTML for dynamic map
+ * - $static_map: Link or image of static map.
+ * - $link: Separate link to detailed map.
  * - $address_text: Address text to display (empty if it should not be
  *   displayed).
- * - $map_type: Type of map to use (Google code, such as 'm' or 't').
- * - $langcode: Two-letter language code to use.
- * - $static_map_type: Type of map to use for static map (Google code, such as
- *  'roadmap' or 'satellite')
  *
  * @ingroup themeable
  */
-if ($include_map) {
+
 ?>
-<iframe width="<?php print $width; ?>" height="<?php print $height; ?>" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.com/maps?hl=<?php print $langcode; ?>&amp;q=<?php print $url_suffix; ?>&amp;iwloc=<?php print ($information_bubble ? 'A': 'near'); ?>&amp;z=<?php print $zoom; ?>&amp;t=<?php print $map_type; ?>&amp;output=embed"></iframe>
-<?php
-}
-if ($include_static_map) {
-  $static_w = (int) $width;
-  $static_h = (int) $height;
-  $static_s = (int) $static_scale;
-?>
-<div class="simple-gmap-static-map">
-  <img src="https://maps.googleapis.com/maps/api/staticmap?size=<?php print $static_w; ?>x<?php print $static_h; ?>&amp;scale=<?php print $static_s; ?>&amp;zoom=<?php print $zoom; ?>&amp;language=<?php print $langcode; ?>&amp;maptype=<?php print $static_map_type; ?>&amp;markers=color:red|<?php print $url_suffix; ?>&amp;sensor=false" />
-</div>
-<?php
-}
-if ($include_link) {
-?>
-<p class="simple-gmap-link"><a href="https://maps.google.com/maps?q=<?php print $url_suffix; ?>&amp;hl=<?php print $langcode; ?>&amp;iwloc=<?php print ($information_bubble ? 'A': 'near'); ?>&amp;z=<?php print $zoom; ?>&amp;t=<?php print $map_type; ?>" target="_blank"><?php print $link_text; ?></a></p>
-<?php
-}
-if (!empty($address_text)) {
-?>
-<p class="simple-gmap-address"><?php print $address_text; ?></p>
-<?php
-}
+<?php if (!empty($map)): ?>
+  <?php print $map; ?>
+<?php endif; ?>
+<?php if (!empty($static_map)): ?>
+  <div class="simple-gmap-static-map">
+    <?php print $static_map; ?>
+  </div>
+<?php endif; ?>
+<?php if (!empty($link)): ?>
+  <p class="simple-gmap-link">
+    <?php print $link; ?>
+  </p>
+<?php endif; ?>
+<?php if (!empty($address_text)): ?>
+  <p class="simple-gmap-address"><?php print $address_text; ?></p>
+<?php endif; ?>
diff --git a/simple_gmap.module b/simple_gmap.module
index ad7cdbe..1d3a15d 100644
--- a/simple_gmap.module
+++ b/simple_gmap.module
@@ -23,6 +23,7 @@ function simple_gmap_field_formatter_info() {
     'settings' => array(
       'include_map' => 1,
       'include_static_map' => 0,
+      'include_static_map_link' => 0,
       'include_link' => 0,
       'include_text' => 0,
       'iframe_height' => 200,
@@ -46,21 +47,10 @@ function simple_gmap_theme($existing, $type, $theme, $path) {
   return array(
     'simple_gmap_output' => array(
       'variables' => array(
-        'include_map' => TRUE,
-        'include_static_map' => 0,
-        'include_link' => FALSE,
-        'include_text' => FALSE,
-        'width' => 200,
-        'height' => 200,
-        'static_scale' => 1,
-        'url_suffix' => '',
-        'zoom' => 12,
-        'static_map_type' => 'roadmap',
-        'information_bubble' => TRUE,
-        'link_text' => t('View larger map'),
+        'map' => array(),
+        'static_map' => FALSE,
+        'link' => FALSE,
         'address_text' => '',
-        'map_type' => 'm',
-        'langcode' => 'en',
       ),
       'template' => 'simple-gmap-output',
     ),
@@ -73,26 +63,25 @@ function simple_gmap_theme($existing, $type, $theme, $path) {
  * Formats map/link fields.
  */
 function simple_gmap_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
-
   global $language;
 
   $element = array();
 
   // Figure out what to display for each item we have here.
-  $embed = (int) $display['settings']['include_map'] ? TRUE : FALSE;
-  $static = (isset($display['settings']['include_static_map']) && (int) $display['settings']['include_static_map'] ) ? TRUE : FALSE;
-  $link = (int) $display['settings']['include_link'] ? TRUE : FALSE;
-  $text = (int) $display['settings']['include_text'] ? TRUE : FALSE;
-
-  $height = check_plain($display['settings']['iframe_height']);
-  $width = check_plain($display['settings']['iframe_width']);
-  $static_scale = (int) check_plain($display['settings']['static_scale']);
-  $link_text = $link ? check_plain($display['settings']['link_text']) : '';
-  $bubble = $display['settings']['information_bubble'] ? TRUE : FALSE;
+  $include_map = !empty($display['settings']['include_map']);
+  $include_static_map = !empty($display['settings']['include_static_map']);
+  $include_static_map_link = !empty($display['settings']['include_static_map_link']);
+  $include_link = !empty($display['settings']['include_link']);
+  $include_text = !empty($display['settings']['include_text']);
+
+  $height = (int) $display['settings']['iframe_height'];
+  $width = (int) $display['settings']['iframe_width'];
+  $static_scale = (int) $display['settings']['static_scale'];
+  $show_bubble = !empty($display['settings']['information_bubble']);
   $zoom_level = (int) $display['settings']['zoom_level'];
 
   // Figure out a language code to use. Google cannot recognize 'und'.
-  $lang_to_use = isset($display['settings']['langcode']) ? check_plain($display['settings']['langcode']) : 'en';
+  $lang_to_use = isset($display['settings']['langcode']) ? $display['settings']['langcode'] : 'en';
   if ($lang_to_use == 'page') {
     $lang_to_use = $langcode;
   }
@@ -109,29 +98,109 @@ function simple_gmap_field_formatter_view($entity_type, $entity, $field, $instan
     $map_type = 'm';
   }
 
-  foreach($items as $delta => $item) {
-    $url_value = urlencode(check_plain($item['value']));
-    $address_value = check_plain($item['value']);
-    $address = $text ? $address_value : '';
-
-    $element[$delta] = array(
+  foreach ($items as $delta => $item) {
+    $build_array = array(
       '#theme' => 'simple_gmap_output',
-      '#include_map' => $embed,
-      '#include_static_map' => $static,
-      '#include_link' => $link,
-      '#include_text' => $text,
-      '#width' => $width,
-      '#height' => $height,
-      '#static_scale' => $static_scale,
-      '#url_suffix' => $url_value,
-      '#zoom' => $zoom_level,
-      '#information_bubble' => $bubble,
-      '#link_text' => ($link_text == 'use_address') ? $address_value : $link_text,
-      '#address_text' => $address,
-      '#map_type' => $map_type,
-      '#langcode' => $lang_to_use,
-      '#static_map_type' => $static_map_types[$map_type],
     );
+
+    $location = trim($item['value']);
+    $map_url = 'https://maps.google.com/maps';
+
+    $link_url = FALSE;
+    $map_query = array();
+    if (url_is_external($location)) {
+      $url_parts = parse_url($location);
+      $map_url = $url_parts['scheme'] . '://' . $url_parts['host'] . $url_parts['path'];
+
+      // Try to fetch lat, lng and zoom from URL to build proper static image.
+      $path_parts = explode('/', $url_parts['path']);
+      foreach ($path_parts as $part) {
+        if (strpos($part, '@') === 0) {
+          $part = trim($part, '@');
+          list($lat, $lng, $zoom) = explode(',', $part);
+          $link_url = $location;
+          $location = $lat . ',' . $lng;
+          $zoom_level = (int) $zoom;
+          break;
+        }
+      }
+
+      parse_str($url_parts['query'], $query_parts);
+      $map_query = $query_parts;
+    }
+
+    $map_query += array(
+      'q' => $location,
+      'hl' => $lang_to_use,
+      'iwloc' => ($show_bubble ? 'A': 'near'),
+      'z' => $zoom_level,
+      't' => $map_type,
+    );
+
+    if (!$link_url) {
+      $link_url = url($map_url, array('query' => $map_query));
+    }
+
+    if ($include_map) {
+      $src = url(
+        'https://maps.google.com/maps',
+        array(
+          'query' => ($map_query + array('output' => 'embed'))
+        )
+      );
+      $map_attributes = array(
+        'width' => $width,
+        'height' => $height,
+        'frameborder' => '0',
+        'scrolling' => 'no',
+        'marginheight' => '0',
+        'marginwidth' => '0',
+        'src' => $src,
+      );
+
+      $build_array['#map'] = '<iframe' . drupal_attributes($map_attributes). '></iframe>';
+    }
+
+    if ($include_static_map) {
+      $static_map_query = array(
+        'size' => $width . 'x' . $height,
+        'zoom' => $zoom_level,
+        'language' => $lang_to_use,
+        'maptype' => $static_map_types[$map_type],
+        'markers' => 'color:red|' . $location,
+        'sensor' => 'false',
+        'scale' => $static_scale,
+      );
+      $static_map_url = url('http://maps.googleapis.com/maps/api/staticmap', array('query' => $static_map_query));
+      $build_array['#static_map'] = theme('image', array('path' => $static_map_url));
+      if ($include_static_map_link) {
+        $build_array['#static_map'] = l(
+          $build_array['#static_map'],
+          $link_url,
+          array('attributes' => array('target' => '_blank'), 'html' => TRUE)
+        );
+      }
+    }
+
+    if ($include_link) {
+      $link_text = !empty($display['settings']['link_text'])
+        ? $display['settings']['link_text']
+        : t('View larger map');
+      if ($link_text == 'use_address') {
+        $link_text = $item['value'];
+      }
+      $build_array['#link'] = l(
+        $link_text,
+        $link_url,
+        array('attributes' => array('target' => '_blank'))
+      );
+    }
+
+    if ($include_text && !empty($item['value'])) {
+      $build_array['#address_text'] = check_plain($item['value']);
+    }
+
+    $element[$delta] = $build_array;
   }
 
   return $element;
@@ -162,6 +231,17 @@ function simple_gmap_field_formatter_settings_form($field, $instance, $view_mode
     '#default_value' => (isset($settings['include_static_map'])) ? (int) $settings['include_static_map'] : 0,
   );
 
+  $element['include_static_map_link'] = array(
+    '#type' => 'checkbox',
+    '#title' => t('Static map as link'),
+    '#default_value' => (isset($settings['include_static_map_link'])) ? (int) $settings['include_static_map_link'] : 0,
+    '#states' => array(
+      'invisible' => array(
+        'input[name*="[settings_edit_form][settings][include_static_map]"]' => array('checked' => FALSE),
+      ),
+    ),
+  );
+
   $element['iframe_width'] = array(
     '#title' => t('Width of embedded map'),
     '#type' => 'textfield',
@@ -289,10 +369,10 @@ function simple_gmap_field_formatter_settings_summary($field, $instance, $view_m
   $information_bubble = $settings['information_bubble'] ? t('Yes') : t('No');
 
   $map_types = array(
-      'm' => t('Map'),
-      'k' => t('Satellite'),
-      'h' => t('Hybrid'),
-      'p' => t('Terrain'),
+    'm' => t('Map'),
+    'k' => t('Satellite'),
+    'h' => t('Hybrid'),
+    'p' => t('Terrain'),
   );
   $map_type = isset($settings['map_type']) ? check_plain($settings['map_type']) : 'm';
   $map_type = isset($map_types[$map_type]) ? $map_types[$map_type] : $map_types['m'];
