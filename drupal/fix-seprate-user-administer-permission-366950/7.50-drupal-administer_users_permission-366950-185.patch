diff --git a/modules/contact/contact.test b/modules/contact/contact.test
index 6693b57..7ff0890 100644
--- a/modules/contact/contact.test
+++ b/modules/contact/contact.test
@@ -25,7 +25,7 @@ class ContactSitewideTestCase extends DrupalWebTestCase {
    */
   function testSiteWideContact() {
     // Create and login administrative user.
-    $admin_user = $this->drupalCreateUser(array('access site-wide contact form', 'administer contact forms', 'administer users'));
+    $admin_user = $this->drupalCreateUser(array('access site-wide contact form', 'administer contact forms', 'administer users', 'administer user settings'));
     $this->drupalLogin($admin_user);
 
     $flood_limit = 3;
@@ -315,7 +315,7 @@ class ContactPersonalTestCase extends DrupalWebTestCase {
     parent::setUp('contact');
 
     // Create an admin user.
-    $this->admin_user = $this->drupalCreateUser(array('administer contact forms', 'administer users'));
+    $this->admin_user = $this->drupalCreateUser(array('administer contact forms', 'administer users', 'administer user settings'));
 
     // Create some normal users with their contact forms enabled by default.
     variable_set('contact_default_status', TRUE);
diff --git a/modules/user/user.install b/modules/user/user.install
index 7a74766..82e7613 100644
--- a/modules/user/user.install
+++ b/modules/user/user.install
@@ -922,6 +922,18 @@ function user_update_7019() {
     db_add_index('authmap', 'uid_module', array('uid', 'module'));
   }
 }
+
+/**
+ * Add fallback for new 'administer user settings' permission.
+ */
+function user_update_7020() {
+  $user_admin_roles = user_roles(FALSE, 'administer users');
+  foreach (array_keys($user_admin_roles) as $rid => $role) {
+    user_role_grant_permissions($rid, array('administer user settings'));
+  }
+  // Make sure the new 7019 update from drupal-7.50 is also applied.
+  user_update_7019();
+}
 /**
  * @} End of "addtogroup updates-7.x-extra".
  */
diff --git a/modules/user/user.module b/modules/user/user.module
index 0ba9654..4c4b982 100644
--- a/modules/user/user.module
+++ b/modules/user/user.module
@@ -881,6 +881,11 @@ function user_permission() {
       'title' => t('Administer users'),
       'restrict access' => TRUE,
     ),
+    'administer user settings' => array(
+      'title' => t('Administer user settings'),
+      'description' => t('Manage settings that apply to all user accounts.'),
+      'restrict access' => TRUE,
+    ),
     'access user profiles' => array(
       'title' => t('View user profiles'),
     ),
@@ -1778,7 +1783,7 @@ function user_menu() {
     'description' => 'Configure default behavior of users, including registration requirements, e-mails, fields, and user pictures.',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('user_admin_settings'),
-    'access arguments' => array('administer users'),
+    'access arguments' => array('administer user settings'),
     'file' => 'user.admin.inc',
     'weight' => -10,
   );
diff --git a/modules/user/user.test b/modules/user/user.test
index 63143c3..71ca23f 100644
--- a/modules/user/user.test
+++ b/modules/user/user.test
@@ -1314,7 +1314,7 @@ class UserPictureTestCase extends DrupalWebTestCase {
    * Tests the admin form validates user picture settings.
    */
   function testUserPictureAdminFormValidation() {
-    $this->drupalLogin($this->drupalCreateUser(array('administer users')));
+    $this->drupalLogin($this->drupalCreateUser(array('administer users', 'administer user settings')));
 
     // The default values are valid.
     $this->drupalPost('admin/config/people/accounts', array(), t('Save configuration'));
@@ -1345,7 +1345,7 @@ class UserPermissionsTestCase extends DrupalWebTestCase {
   function setUp() {
     parent::setUp();
 
-    $this->admin_user = $this->drupalCreateUser(array('administer permissions', 'access user profiles', 'administer site configuration', 'administer modules', 'administer users'));
+    $this->admin_user = $this->drupalCreateUser(array('administer permissions', 'access user profiles', 'administer site configuration', 'administer modules', 'administer users', 'administer user settings'));
 
     // Find the new role ID - it must be the maximum.
     $all_rids = array_keys($this->admin_user->roles);
